# Velvet Python - Environment Variables Template
# ===============================================
# Author: Cazzy Aporbo, MS
# Created: January 2025
#
# This is a template for your environment variables.
# Copy this file to .env and fill in your actual values.
#
# IMPORTANT: Never commit .env to version control!
# The .env file should be in .gitignore (which it is).
#
# How to use:
# 1. Copy this file: cp .env.example .env
# 2. Edit .env with your actual values
# 3. The .env file will be automatically loaded by python-dotenv
#
# I learned to use .env files after accidentally committing
# database credentials to GitHub. Never again!

# ==============================================================================
# APPLICATION SETTINGS
# ==============================================================================

# Environment: development, staging, production
# I use this to change behavior based on where the code is running
APP_ENV=development

# Debug mode: true/false
# Always false in production! I learned this after exposing stack traces
DEBUG=true

# Application secret key (generate a strong one for production)
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your-secret-key-here-change-this-in-production

# Application host and port
APP_HOST=127.0.0.1
APP_PORT=8000

# ==============================================================================
# DATABASE CONFIGURATION
# ==============================================================================

# Database URL (PostgreSQL example)
# Format: postgresql://username:password@host:port/database
DATABASE_URL=postgresql://user:password@localhost:5432/velvet_python

# SQLite alternative (for development)
# DATABASE_URL=sqlite:///./velvet_python.db

# Database pool settings
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=10

# ==============================================================================
# REDIS CONFIGURATION (for caching and queues)
# ==============================================================================

REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=
REDIS_MAX_CONNECTIONS=10

# ==============================================================================
# API KEYS AND EXTERNAL SERVICES
# ==============================================================================

# OpenAI API Key (for NLP module)
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-...

# GitHub Token (for API examples)
# Generate at: https://github.com/settings/tokens
GITHUB_TOKEN=ghp_...

# AWS Credentials (for cloud modules)
# Never use root credentials!
AWS_ACCESS_KEY_ID=AKIA...
AWS_SECRET_ACCESS_KEY=...
AWS_REGION=us-east-1

# Stripe API Key (for payment examples)
STRIPE_API_KEY=sk_test_...
STRIPE_WEBHOOK_SECRET=whsec_...

# SendGrid API Key (for email examples)
SENDGRID_API_KEY=SG...
FROM_EMAIL=noreply@example.com

# ==============================================================================
# MONITORING AND LOGGING
# ==============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
# I use DEBUG in development, INFO in production
LOG_LEVEL=DEBUG

# Log output: console, file, both
LOG_OUTPUT=console

# Log file path (if using file logging)
LOG_FILE_PATH=logs/app.log

# Sentry DSN (for error tracking in production)
# Get from: https://sentry.io
SENTRY_DSN=

# DataDog API Key (for metrics)
DATADOG_API_KEY=

# ==============================================================================
# FILE STORAGE
# ==============================================================================

# Upload directory for user files
UPLOAD_DIR=uploads/

# Maximum file size (in bytes)
# 10MB = 10485760
MAX_FILE_SIZE=10485760

# Allowed file extensions (comma-separated)
ALLOWED_EXTENSIONS=.jpg,.jpeg,.png,.pdf,.txt,.csv

# S3 Bucket (if using AWS S3 for storage)
S3_BUCKET_NAME=velvet-python-uploads
S3_REGION=us-east-1

# ==============================================================================
# SECURITY SETTINGS
# ==============================================================================

# CORS origins (comma-separated)
# In production, be specific! Don't use * unless you really mean it
CORS_ORIGINS=http://localhost:3000,http://localhost:8000

# Session timeout (in seconds)
# 3600 = 1 hour
SESSION_TIMEOUT=3600

# Password requirements
MIN_PASSWORD_LENGTH=12
REQUIRE_PASSWORD_SPECIAL_CHARS=true
REQUIRE_PASSWORD_NUMBERS=true

# Rate limiting
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_PERIOD=3600

# ==============================================================================
# FEATURE FLAGS
# ==============================================================================

# I use these to enable/disable features without deploying new code
ENABLE_SIGNUP=true
ENABLE_API_V2=false
ENABLE_DARK_MODE=true
ENABLE_ANALYTICS=false
ENABLE_EXPERIMENTAL_FEATURES=false

# ==============================================================================
# DEVELOPMENT TOOLS
# ==============================================================================

# Streamlit settings (for interactive apps)
STREAMLIT_SERVER_PORT=8501
STREAMLIT_SERVER_HEADLESS=true
STREAMLIT_THEME=light

# Jupyter settings
JUPYTER_PORT=8888
JUPYTER_TOKEN=

# Docker settings
DOCKER_REGISTRY=docker.io
DOCKER_USERNAME=
DOCKER_PASSWORD=

# ==============================================================================
# TESTING
# ==============================================================================

# Test database (separate from development)
TEST_DATABASE_URL=postgresql://user:password@localhost:5432/velvet_python_test

# Test mode flag
TESTING=false

# Coverage requirements (percentage)
MIN_COVERAGE=80

# ==============================================================================
# CI/CD
# ==============================================================================

# CI environment flag
CI=false

# GitHub Actions secrets (these are set in GitHub, not here)
# Just documenting what's needed:
# - PYPI_API_TOKEN (for publishing)
# - CODECOV_TOKEN (for coverage reports)
# - DOCS_DEPLOY_KEY (for documentation)

# ==============================================================================
# PROJECT SPECIFIC
# ==============================================================================

# Velvet Python specific settings
VELVET_MODULE_PATH=./modules
VELVET_BENCHMARK_ITERATIONS=5
VELVET_ENABLE_TELEMETRY=false

# Module-specific settings
# Module 01 - Environments
VENV_DEFAULT_PATH=.venv
VENV_AUTO_ACTIVATE=true

# Module 07 - HTTP Clients
HTTP_TIMEOUT=30
HTTP_MAX_RETRIES=3

# Module 08 - Databases
DB_MIGRATION_PATH=./migrations
DB_SEED_ON_START=false

# Module 09 - Concurrency
MAX_WORKERS=4
THREAD_POOL_SIZE=10
ASYNC_TIMEOUT=60

# ==============================================================================
# NOTES
# ==============================================================================
#
# Security reminders:
# 1. Never commit .env files to version control
# 2. Use different values for development and production
# 3. Rotate keys regularly
# 4. Use secrets management in production (AWS Secrets Manager, etc.)
# 5. Audit log access to sensitive variables
#
# I once exposed API keys in a public repo. The AWS bill was painful.
# Learn from my mistakes - always use .env files!
#
# Author: Cazzy Aporbo, MS
